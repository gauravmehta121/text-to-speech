xml file of text to speak java app

?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.gaurav.talky.MainActivity"
    android:orientation="vertical">

    <EditText

        android:id="@+id/input"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_weight="1"
        android:hint="enter something to speak..."/>
    <Button
        android:id="@+id/speak_btn"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="speak!!!"/>

</LinearLayout>



NOW MAIN ACTIVITY IN JAVA


package com.example.gaurav.talky;

import android.app.Activity;
import android.os.Bundle;
import android.speech.tts.TextToSpeech;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

import java.util.Locale;
import java.util.Queue;

public class MainActivity extends Activity implements TextToSpeech.OnInitListener {
    EditText input;
    Button speak_button;
    TextToSpeech TTS;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        TTS = new TextToSpeech(this, this);
        input = (EditText) findViewById(R.id.input);
        speak_button = (Button) findViewById(R.id.speak_btn);
        speak_button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                speak();
            }
        });
    }

    @Override
    public void onInit(int status) {
        if (status == TextToSpeech.SUCCESS) {
            int result = TTS.setLanguage(Locale.getDefault());
            TTS.setSpeechRate(5);
            TTS.setPitch(5);
            if (result == TextToSpeech.LANG_NOT_SUPPORTED || result == TextToSpeech.LANG_MISSING_DATA) {
                Log.e("TTS", "Language not supported!!");
            } else {
                speak_button.setEnabled(true);
                speak();
            }

        } else {
            Log.e("TTS", "Initialization failed!!!");

        }


    }

    public void speak() {
        String input_text = input.getText().toString();
        TTS.speak(input_text, TextToSpeech.QUEUE_FLUSH, null, null);
    }
}

